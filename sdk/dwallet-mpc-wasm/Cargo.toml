[package]
name = "dwallet-mpc-wasm"
authors = ["dWallet Labs, Ltd. <dev@dwalletlabs.com>"]
description = "dWallet MPC in WASM"
version = "0.1.6"
edition = "2021"
license = "BSD-3-Clause-Clear"
publish = false

[profile.release]
opt-level = 3

[package.metadata.wasm-pack.profile.release]
# Should `wasm-opt` be used to further optimize the wasm binary generated after
# the Rust compiler has finished? Using `wasm-opt` can often further decrease
# binary size or do clever tricks that haven't made their way into LLVM yet.
#
# Configuration is set to `false` by default for the dev profile, but it can
# be set to an array of strings which are explicit arguments to pass to
# `wasm-opt`. For example `['-Os']` would optimize for size while `['-O4']`
# would execute very expensive optimizations passes
wasm-opt = [
    "-O4",
    "--enable-memory64",
    "--monomorphize",
    "-O4",
]

[dependencies]
dwallet-mpc-centralized-party = { path = "../../crates/dwallet-mpc-centralized-party" }
anyhow = "1.0.95"

wasm-bindgen = "0.2.100"
bcs = "0.1.6"
serde-wasm-bindgen = "0.6.5"

[lib]
crate-type = ["cdylib", "rlib"]

[patch.crates-io]
ecdsa = { git = "https://github.com/yaelAbergel/signatures", rev = "7c8523182b1a28e5bcc6bb8d1508fbde1ea845c4"}
crypto-bigint = { git = 'https://github.com/erik-3milabs/crypto-bigint.git', rev = '43226a4' }
