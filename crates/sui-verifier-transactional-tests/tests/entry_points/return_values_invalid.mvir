// Copyright (c) Mysten Labs, Inc.
// SPDX-License-Identifier: BSD-3-Clause-Clear

// return values from entry functions must have drop

//# publish
module 0x0.m {
    import 0x2.tx_context;
    public entry foo(ctx: &mut tx_context.TxContext): &u8 {
        label l0:
        abort 0;
    }
}

//# publish
module 0x0.m {
    import 0x2.tx_context;
    public entry foo(ctx: &mut tx_context.TxContext): &mut u8 {
        label l0:
        abort 0;
    }
}

//# publish
module 0x0.m {
    import 0x2.tx_context;
    public entry foo(ctx: &mut tx_context.TxContext): u64 * &u8 * u8 {
        label l0:
        abort 0;
    }
}

//# publish
module 0x0.m {
    import 0x2.tx_context;
    struct Copyable has copy { flag: bool }
    public entry foo(ctx: &mut tx_context.TxContext): Self.Copyable {
        label l0:
        abort 0;
    }
}

//# publish
module 0x0.m {
    import 0x2.tx_context;
    import 0x2.object;
    struct Obj has key, store { id: object.UID }
    public entry foo(ctx: &mut tx_context.TxContext): Self.Obj {
        label l0:
        abort 0;
    }
}

//# publish
module 0x0.m {
    import 0x2.tx_context;
    import 0x2.object;
    struct Obj has key, store { id: object.UID }
    public entry foo(ctx: &mut tx_context.TxContext): vector<Self.Obj> {
        label l0:
        abort 0;
    }
}
